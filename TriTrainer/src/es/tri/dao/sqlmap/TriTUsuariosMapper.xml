<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="es.tri.dao.TriTUsuariosMapper" >
  <resultMap id="BaseResultMap" type="es.tri.dao.model.TriTUsuarios" >
    <id column="id_usuario" property="id_usuario" jdbcType="INTEGER" />
    <result column="id_tipo_usuario" property="id_tipo_usuario" jdbcType="INTEGER" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Fecha_baja" property="fecha_baja" jdbcType="DATE" />
    <result column="usuario" property="usuario" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="Apellido" property="apellido" jdbcType="VARCHAR" />
    <result column="Nombre" property="nombre" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id_usuario, id_tipo_usuario, Password, Fecha_baja, usuario, email, Apellido, Nombre
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="es.tri.dao.model.TriTUsuariosExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tri_t_usuarios
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tri_t_usuarios
    where id_usuario = #{id_usuario,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tri_t_usuarios
    where id_usuario = #{id_usuario,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="es.tri.dao.model.TriTUsuarios" >
    insert into tri_t_usuarios (id_usuario, id_tipo_usuario, Password, 
      Fecha_baja, usuario, email, 
      Apellido, Nombre)
    values (#{id_usuario,jdbcType=INTEGER}, #{id_tipo_usuario,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{fecha_baja,jdbcType=DATE}, #{usuario,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{apellido,jdbcType=VARCHAR}, #{nombre,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="es.tri.dao.model.TriTUsuarios" >
    insert into tri_t_usuarios
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id_usuario != null" >
        id_usuario,
      </if>
      <if test="id_tipo_usuario != null" >
        id_tipo_usuario,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="fecha_baja != null" >
        Fecha_baja,
      </if>
      <if test="usuario != null" >
        usuario,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="apellido != null" >
        Apellido,
      </if>
      <if test="nombre != null" >
        Nombre,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id_usuario != null" >
        #{id_usuario,jdbcType=INTEGER},
      </if>
      <if test="id_tipo_usuario != null" >
        #{id_tipo_usuario,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="fecha_baja != null" >
        #{fecha_baja,jdbcType=DATE},
      </if>
      <if test="usuario != null" >
        #{usuario,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="apellido != null" >
        #{apellido,jdbcType=VARCHAR},
      </if>
      <if test="nombre != null" >
        #{nombre,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update tri_t_usuarios
    <set >
      <if test="record.id_usuario != null" >
        id_usuario = #{record.id_usuario,jdbcType=INTEGER},
      </if>
      <if test="record.id_tipo_usuario != null" >
        id_tipo_usuario = #{record.id_tipo_usuario,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.fecha_baja != null" >
        Fecha_baja = #{record.fecha_baja,jdbcType=DATE},
      </if>
      <if test="record.usuario != null" >
        usuario = #{record.usuario,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.apellido != null" >
        Apellido = #{record.apellido,jdbcType=VARCHAR},
      </if>
      <if test="record.nombre != null" >
        Nombre = #{record.nombre,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tri_t_usuarios
    set id_usuario = #{record.id_usuario,jdbcType=INTEGER},
      id_tipo_usuario = #{record.id_tipo_usuario,jdbcType=INTEGER},
      Password = #{record.password,jdbcType=VARCHAR},
      Fecha_baja = #{record.fecha_baja,jdbcType=DATE},
      usuario = #{record.usuario,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      Apellido = #{record.apellido,jdbcType=VARCHAR},
      Nombre = #{record.nombre,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="es.tri.dao.model.TriTUsuarios" >
    update tri_t_usuarios
    <set >
      <if test="id_tipo_usuario != null" >
        id_tipo_usuario = #{id_tipo_usuario,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="fecha_baja != null" >
        Fecha_baja = #{fecha_baja,jdbcType=DATE},
      </if>
      <if test="usuario != null" >
        usuario = #{usuario,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="apellido != null" >
        Apellido = #{apellido,jdbcType=VARCHAR},
      </if>
      <if test="nombre != null" >
        Nombre = #{nombre,jdbcType=VARCHAR},
      </if>
    </set>
    where id_usuario = #{id_usuario,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="es.tri.dao.model.TriTUsuarios" >
    update tri_t_usuarios
    set id_tipo_usuario = #{id_tipo_usuario,jdbcType=INTEGER},
      Password = #{password,jdbcType=VARCHAR},
      Fecha_baja = #{fecha_baja,jdbcType=DATE},
      usuario = #{usuario,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      Apellido = #{apellido,jdbcType=VARCHAR},
      Nombre = #{nombre,jdbcType=VARCHAR}
    where id_usuario = #{id_usuario,jdbcType=INTEGER}
  </update>
</mapper>